{
  "openapi": "3.0.0",
  "info": {
    "title": "Journey Manager API",
    "description": "A REST API for managing users, trips, and bookings with JWT authentication. Features carpooling reservation system with seat management.",
    "version": "2.0.0",
    "contact": {
      "name": "API Support",
      "email": "andojoks@gmail.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8000/api/v1",
      "description": "Development server"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register a new user",
        "description": "Create a new user account",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistration"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Login user",
        "description": "Authenticate user and return JWT token",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/me": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Get current user",
        "description": "Get the authenticated user's profile",
        "responses": {
          "200": {
            "description": "User profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Logout user",
        "description": "Invalidate the current JWT token",
        "responses": {
          "200": {
            "description": "Successfully logged out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Refresh JWT token",
        "description": "Get a new JWT token using the current token",
        "responses": {
          "200": {
            "description": "Token refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/trips": {
      "get": {
        "tags": ["Trips"],
        "summary": "List all trips",
        "description": "Get a paginated list of all trips with optional date filtering. Returns trip information without booking details.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "Filter trips from this date (YYYY-MM-DD)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "Filter trips until this date (YYYY-MM-DD)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "origin",
            "in": "query",
            "description": "Filter trips by origin location",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "destination",
            "in": "query",
            "description": "Filter trips by destination location",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Trips retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TripListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Trips"],
        "summary": "Create a new trip",
        "description": "Create a new trip for the authenticated user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TripCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Trip created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TripResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/trips/{id}": {
      "get": {
        "tags": ["Trips"],
        "summary": "Get a specific trip",
        "description": "Get details of a specific trip by ID. Returns trip information without booking details.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Trip ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Trip retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TripResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Trip not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Trips"],
        "summary": "Update a trip",
        "description": "Update an existing trip (only if owned by the authenticated user)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Trip ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TripUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Trip updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TripResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - You can only update your own trips",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Trip not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Trips"],
        "summary": "Delete a trip",
        "description": "Delete a trip (only if owned by the authenticated user)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Trip ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Trip deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - You can only delete your own trips",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Trip not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/trips/available": {
      "get": {
        "tags": ["Trips"],
        "summary": "Get available trips for booking",
        "description": "Get trips with available seats that can be booked by the authenticated user. Returns trip information without booking details.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "Filter trips from this date (YYYY-MM-DD)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "Filter trips until this date (YYYY-MM-DD)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "origin",
            "in": "query",
            "description": "Filter trips by origin location",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "destination",
            "in": "query",
            "description": "Filter trips by destination location",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Available trips retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TripListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/bookings": {
      "get": {
        "tags": ["Bookings"],
        "summary": "List user's bookings",
        "description": "Get a paginated list of the authenticated user's bookings with optional trip filtering",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            }
          },
          {
            "name": "trip_id",
            "in": "query",
            "description": "Filter bookings by specific trip ID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Bookings retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Bookings"],
        "summary": "Create a new booking",
        "description": "Create a new booking request for a trip using the priority queue system. All booking requests are queued and processed automatically by background jobs. Users cannot book their own trips.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingCreate"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Booking request added to queue",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "example": "Booking request added to queue"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "queue_info": {
                          "type": "object",
                          "properties": {
                            "queue_id": {
                              "type": "integer"
                            },
                            "priority_score": {
                              "type": "integer"
                            },
                            "estimated_position": {
                              "type": "integer"
                            },
                            "status": {
                              "type": "string",
                              "enum": ["pending", "processing", "completed", "failed"]
                            },
                            "trip_info": {
                              "type": "object",
                              "properties": {
                                "trip_id": {
                                  "type": "integer"
                                },
                                "origin": {
                                  "type": "string"
                                },
                                "destination": {
                                  "type": "string"
                                },
                                "start_time": {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "available_seats": {
                                  "type": "integer"
                                },
                                "total_seats": {
                                  "type": "integer"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation error or business rule violation (e.g., booking own trip, duplicate booking request)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/bookings/{id}": {
      "get": {
        "tags": ["Bookings"],
        "summary": "Get a specific booking",
        "description": "Get details of a specific booking by ID. Users can view bookings they made or bookings on trips they created.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Booking ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Booking retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - You can only access bookings you made or trips you created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Booking not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Bookings"],
        "summary": "Update a booking",
        "description": "Update a booking's seats reserved or status. Users can update bookings they made or bookings on trips they created. Seat changes are validated against trip capacity.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Booking ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Booking updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - You can only update bookings you made or trips you created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Booking not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation error or insufficient seats",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Bookings"],
        "summary": "Cancel a booking",
        "description": "Cancel a booking. Users can cancel bookings they made or bookings on trips they created. This will restore the seats to the trip.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Booking ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Booking cancelled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - You can only cancel bookings you made or trips you created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Booking not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Booking is already cancelled",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/queue/status": {
      "get": {
        "tags": ["Queue"],
        "summary": "Get queue status for trip",
        "description": "Get the current status of the booking queue for a specific trip. Trip creators can see all queue items, other users can only see their own queue position.",
        "parameters": [
          {
            "name": "trip_id",
            "in": "query",
            "required": true,
            "description": "ID of the trip to get queue status for",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Queue status retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/QueueStatus"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Trip not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/queue/positions": {
      "get": {
        "tags": ["Queue"],
        "summary": "Get user's queue positions",
        "description": "Get all pending queue positions for the authenticated user across all trips.",
        "responses": {
          "200": {
            "description": "Queue positions retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "queue_positions": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/QueuePosition"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/queue/cancel": {
      "delete": {
        "tags": ["Queue"],
        "summary": "Cancel queued booking request",
        "description": "Cancel a pending booking request in the queue. Users can only cancel their own queue requests.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["queue_id"],
                "properties": {
                  "queue_id": {
                    "type": "integer",
                    "description": "ID of the queue item to cancel"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Queue item cancelled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "example": "Queue item cancelled successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Queue item not found or cannot be cancelled",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "User ID"
          },
          "first_name": {
            "type": "string",
            "description": "User's first name"
          },
          "last_name": {
            "type": "string",
            "description": "User's last name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address"
          },
          "phone_number": {
            "type": "string",
            "nullable": true,
            "description": "User's phone number"
          },
          "is_active": {
            "type": "boolean",
            "description": "Whether the user account is active"
          },
          "role": {
            "type": "string",
            "description": "User role",
            "default": "user"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Account creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        }
      },
      "Trip": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Trip ID"
          },
          "user_id": {
            "type": "integer",
            "description": "ID of the user who owns this trip"
          },
          "origin": {
            "type": "string",
            "description": "Trip origin location"
          },
          "destination": {
            "type": "string",
            "description": "Trip destination location"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "description": "Trip start time"
          },
          "end_time": {
            "type": "string",
            "format": "date-time",
            "description": "Trip end time"
          },
          "status": {
            "type": "string",
            "enum": ["in-progress", "completed", "cancelled"],
            "description": "Trip status",
            "default": "in-progress"
          },
          "distance": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "Trip distance in kilometers"
          },
          "trip_type": {
            "type": "string",
            "enum": ["personal", "business"],
            "description": "Type of trip",
            "default": "personal"
          },
          "total_seats": {
            "type": "integer",
            "minimum": 1,
            "maximum": 10,
            "description": "Total number of seats available in the vehicle",
            "default": 4
          },
          "available_seats": {
            "type": "integer",
            "minimum": 0,
            "description": "Number of seats currently available for booking"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Trip creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        }
      },
      "UserRegistration": {
        "type": "object",
        "required": ["first_name", "last_name", "email", "password"],
        "properties": {
          "first_name": {
            "type": "string",
            "maxLength": 255,
            "description": "User's first name"
          },
          "last_name": {
            "type": "string",
            "maxLength": 255,
            "description": "User's last name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 255,
            "description": "User's email address (must be unique)"
          },
          "password": {
            "type": "string",
            "minLength": 6,
            "description": "User's password"
          },
          "phone_number": {
            "type": "string",
            "maxLength": 20,
            "description": "User's phone number (optional)"
          }
        }
      },
      "UserLogin": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address"
          },
          "password": {
            "type": "string",
            "description": "User's password"
          }
        }
      },
      "TripCreate": {
        "type": "object",
        "required": ["origin", "destination", "start_time", "end_time"],
        "properties": {
          "origin": {
            "type": "string",
            "maxLength": 255,
            "description": "Trip origin location"
          },
          "destination": {
            "type": "string",
            "maxLength": 255,
            "description": "Trip destination location"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "description": "Trip start time"
          },
          "end_time": {
            "type": "string",
            "format": "date-time",
            "description": "Trip end time (must be after start_time)"
          },
          "distance": {
            "type": "number",
            "format": "float",
            "minimum": 0,
            "description": "Trip distance in kilometers (optional)"
          },
          "trip_type": {
            "type": "string",
            "enum": ["personal", "business"],
            "description": "Type of trip (optional, defaults to 'personal')"
          },
          "status": {
            "type": "string",
            "enum": ["in-progress", "completed", "cancelled"],
            "description": "Trip status (optional, defaults to 'in-progress')"
          },
          "total_seats": {
            "type": "integer",
            "minimum": 1,
            "maximum": 10,
            "description": "Total number of seats available in the vehicle (optional, defaults to 4)"
          }
        }
      },
      "TripUpdate": {
        "type": "object",
        "properties": {
          "origin": {
            "type": "string",
            "maxLength": 255,
            "description": "Trip origin location"
          },
          "destination": {
            "type": "string",
            "maxLength": 255,
            "description": "Trip destination location"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "description": "Trip start time"
          },
          "end_time": {
            "type": "string",
            "format": "date-time",
            "description": "Trip end time (must be after start_time)"
          },
          "distance": {
            "type": "number",
            "format": "float",
            "minimum": 0,
            "description": "Trip distance in kilometers"
          },
          "trip_type": {
            "type": "string",
            "enum": ["personal", "business"],
            "description": "Type of trip"
          },
          "status": {
            "type": "string",
            "enum": ["in-progress", "completed", "cancelled"],
            "description": "Trip status"
          },
          "total_seats": {
            "type": "integer",
            "minimum": 1,
            "maximum": 10,
            "description": "Total number of seats available in the vehicle"
          }
        }
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates if the request was successful"
          },
          "message": {
            "type": "string",
            "description": "Response message"
          },
          "data": {
            "type": "object",
            "properties": {
              "user": {
                "$ref": "#/components/schemas/User"
              },
              "token": {
                "type": "string",
                "description": "JWT token"
              },
              "token_type": {
                "type": "string",
                "description": "Token type",
                "default": "bearer"
              },
              "expires_in": {
                "type": "integer",
                "description": "Token expiration time in seconds"
              }
            }
          }
        }
      },
      "TokenResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates if the request was successful"
          },
          "data": {
            "type": "object",
            "properties": {
              "token": {
                "type": "string",
                "description": "New JWT token"
              },
              "token_type": {
                "type": "string",
                "description": "Token type",
                "default": "bearer"
              },
              "expires_in": {
                "type": "integer",
                "description": "Token expiration time in seconds"
              }
            }
          }
        }
      },
      "UserProfileResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates if the request was successful"
          },
          "data": {
            "type": "object",
            "properties": {
              "user": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        }
      },
      "TripResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates if the request was successful"
          },
          "message": {
            "type": "string",
            "description": "Response message"
          },
          "data": {
            "type": "object",
            "properties": {
              "trip": {
                "$ref": "#/components/schemas/Trip"
              }
            }
          }
        }
      },
      "TripListResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates if the request was successful"
          },
          "data": {
            "type": "object",
            "properties": {
              "current_page": {
                "type": "integer",
                "description": "Current page number"
              },
              "data": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Trip"
                },
                "description": "Array of trips"
              },
              "first_page_url": {
                "type": "string",
                "description": "URL to the first page"
              },
              "from": {
                "type": "integer",
                "description": "Starting record number"
              },
              "last_page": {
                "type": "integer",
                "description": "Last page number"
              },
              "last_page_url": {
                "type": "string",
                "description": "URL to the last page"
              },
              "links": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "nullable": true
                    },
                    "label": {
                      "type": "string"
                    },
                    "active": {
                      "type": "boolean"
                    }
                  }
                },
                "description": "Pagination links"
              },
              "next_page_url": {
                "type": "string",
                "nullable": true,
                "description": "URL to the next page"
              },
              "path": {
                "type": "string",
                "description": "Base path for pagination"
              },
              "per_page": {
                "type": "integer",
                "description": "Number of items per page"
              },
              "prev_page_url": {
                "type": "string",
                "nullable": true,
                "description": "URL to the previous page"
              },
              "to": {
                "type": "integer",
                "description": "Ending record number"
              },
              "total": {
                "type": "integer",
                "description": "Total number of records"
              }
            }
          }
        }
      },
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates if the request was successful"
          },
          "message": {
            "type": "string",
            "description": "Response message"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates if the request was successful",
            "default": false
          },
          "message": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "ValidationError": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates if the request was successful",
            "default": false
          },
          "message": {
            "type": "string",
            "description": "Error message"
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Validation error details"
          }
        }
      },
      "Booking": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Booking ID"
          },
          "user_id": {
            "type": "integer",
            "description": "ID of the user who made this booking"
          },
          "trip_id": {
            "type": "integer",
            "description": "ID of the trip being booked"
          },
          "seats_reserved": {
            "type": "integer",
            "minimum": 1,
            "description": "Number of seats reserved in this booking"
          },
          "booking_time": {
            "type": "string",
            "format": "date-time",
            "description": "When the booking was made"
          },
          "status": {
            "type": "string",
            "enum": ["confirmed", "cancelled"],
            "description": "Booking status",
            "default": "confirmed"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Booking creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          },
          "user": {
            "$ref": "#/components/schemas/User",
            "description": "User who made the booking"
          },
          "trip": {
            "$ref": "#/components/schemas/Trip",
            "description": "Trip being booked"
          }
        }
      },
    "BookingCreate": {
      "type": "object",
      "required": ["trip_id", "seats_reserved"],
      "properties": {
        "trip_id": {
          "type": "integer",
          "description": "ID of the trip to book"
        },
        "seats_reserved": {
          "type": "integer",
          "minimum": 1,
          "maximum": 10,
          "description": "Number of seats to reserve"
        }
      }
    },
    "BookingUpdate": {
      "type": "object",
      "properties": {
        "seats_reserved": {
          "type": "integer",
          "minimum": 1,
          "maximum": 10,
          "description": "Number of seats to reserve (optional)"
        },
        "status": {
          "type": "string",
          "enum": ["confirmed", "cancelled"],
          "description": "Booking status (optional)"
        }
      }
    },
      "BookingResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates if the request was successful"
          },
          "message": {
            "type": "string",
            "description": "Response message"
          },
          "data": {
            "type": "object",
            "properties": {
              "booking": {
                "$ref": "#/components/schemas/Booking"
              }
            }
          }
        }
      },
      "BookingListResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates if the request was successful"
          },
          "data": {
            "type": "object",
            "properties": {
              "current_page": {
                "type": "integer",
                "description": "Current page number"
              },
              "data": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Booking"
                },
                "description": "Array of bookings"
              },
              "first_page_url": {
                "type": "string",
                "description": "URL to the first page"
              },
              "from": {
                "type": "integer",
                "description": "Starting record number"
              },
              "last_page": {
                "type": "integer",
                "description": "Last page number"
              },
              "last_page_url": {
                "type": "string",
                "description": "URL to the last page"
              },
              "links": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "nullable": true
                    },
                    "label": {
                      "type": "string"
                    },
                    "active": {
                      "type": "boolean"
                    }
                  }
                },
                "description": "Pagination links"
              },
              "next_page_url": {
                "type": "string",
                "nullable": true,
                "description": "URL to the next page"
              },
              "path": {
                "type": "string",
                "description": "Base path for pagination"
              },
              "per_page": {
                "type": "integer",
                "description": "Number of items per page"
              },
              "prev_page_url": {
                "type": "string",
                "nullable": true,
                "description": "URL to the previous page"
              },
              "to": {
                "type": "integer",
                "description": "Ending record number"
              },
              "total": {
                "type": "integer",
                "description": "Total number of records"
              }
            }
          }
        }
      },
      "QueueStatus": {
        "type": "object",
        "properties": {
          "trip_id": {
            "type": "integer",
            "description": "ID of the trip"
          },
          "total_requests": {
            "type": "integer",
            "description": "Total number of queue requests"
          },
          "pending_requests": {
            "type": "integer",
            "description": "Number of pending requests"
          },
          "processing_requests": {
            "type": "integer",
            "description": "Number of requests being processed"
          },
          "completed_requests": {
            "type": "integer",
            "description": "Number of completed requests"
          },
          "failed_requests": {
            "type": "integer",
            "description": "Number of failed requests"
          },
          "queue_items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Queue item ID"
                },
                "user_id": {
                  "type": "integer",
                  "description": "User ID (only visible to trip creator or user themselves)"
                },
                "seats_requested": {
                  "type": "integer",
                  "description": "Number of seats requested"
                },
                "priority_score": {
                  "type": "integer",
                  "description": "Priority score"
                },
                "status": {
                  "type": "string",
                  "enum": ["pending", "processing", "completed", "failed"],
                  "description": "Queue item status"
                },
                "queued_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "When the request was queued"
                },
                "processed_at": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true,
                  "description": "When the request was processed"
                },
                "failure_reason": {
                  "type": "string",
                  "nullable": true,
                  "description": "Reason for failure (if applicable)"
                }
              }
            }
          }
        }
      },
      "QueuePosition": {
        "type": "object",
        "properties": {
          "queue_id": {
            "type": "integer",
            "description": "Queue item ID"
          },
          "trip_id": {
            "type": "integer",
            "description": "Trip ID"
          },
          "trip_origin": {
            "type": "string",
            "description": "Trip origin"
          },
          "trip_destination": {
            "type": "string",
            "description": "Trip destination"
          },
          "seats_requested": {
            "type": "integer",
            "description": "Number of seats requested"
          },
          "priority_score": {
            "type": "integer",
            "description": "Priority score"
          },
          "queued_at": {
            "type": "string",
            "format": "date-time",
            "description": "When the request was queued"
          },
          "estimated_position": {
            "type": "integer",
            "description": "Estimated position in queue"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "User authentication and authorization endpoints"
    },
    {
      "name": "Trips",
      "description": "Trip management endpoints"
    },
    {
      "name": "Bookings",
      "description": "Booking management endpoints for carpooling reservations"
    },
    {
      "name": "Queue",
      "description": "Queue management endpoints for monitoring and controlling booking requests"
    }
  ]
}
